name: Deploy

on:
  push:
    branches:
      - dev

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: '3.16.9'
        cache: true
    
    - #2 setup java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'
          
    - name: Set up key.properties
      run: |
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" > android/key.properties
        echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "${{ secrets.STORE_FILE_CONTENT }}" | base64 --decode > android/app/key.jks

    - name: Set up local.properties
      run: |
        echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties

    - name: Set up Play Store Secret
      run: |
        echo "${{ secrets.PLAY_STORE_JSON }}" | base64 --decode > android/play_store_secret.json
    
    - name: Setup Fastlane
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
        bundler-cache: false

    - name: Install Fastlane plugins
      run: |
        gem install bundler -v 2.4.22
        bundle config path vendor/bundle
        gem install fastlane
        echo 'source "https://rubygems.org"' >> Gemfile
        echo 'gem "fastlane"' >> Gemfile
        echo 'gem "fastlane-plugin-increment_version_code"' >> Gemfile
        echo 'gem "ostruct"' >> Gemfile
        bundle install --jobs 4 --retry 3


    - name: Build and Deploy
      run: |
        flutter pub get
        make deploy-android
  
  # ios:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       channel: stable
  #       cache: true

  #   - name: Set up App Store Connect
  #     run: |
  #       echo "${{ secrets.APP_STORE_CONNECT }}" | base64 --decode > ios/app_store_connect.json

  #   - name: Setup Fastlane
  #     uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: 2.6
  #       rubygems: latest

  #   - name: Build and Deploy
  #     run: |
  #       flutter pub get
  #       make deploy-ios
  #     env:
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_BASIC_AUTHORIZATION }}
          
  web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Make Web Build
        run: |
          flutter pub get
          flutter build web 

      - name: Deploy Web Build
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHECKLIST_6A64E }}'
          channelId: live
          projectId: checklist-6a64e

  tag:
    runs-on: ubuntu-latest
    needs: [android,web]
    # needs: [android, ios, web]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Get Flutter Version
      run: |
        versionName=`cat pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs`
        echo "VERSION_NAME=v$versionName" >> $GITHUB_ENV

    - name: Create Tag and Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: ${{ env.VERSION_NAME }}
        automatic_release_tag: ${{ env.VERSION_NAME }}
        draft: false
        prerelease: false